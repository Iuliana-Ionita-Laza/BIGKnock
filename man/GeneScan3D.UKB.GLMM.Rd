% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BIGKnock.R
\name{GeneScan3D.UKB.GLMM}
\alias{GeneScan3D.UKB.GLMM}
\title{Conduct GeneScan3D analysis on UKBB data using fitted null GLMM results.}
\usage{
GeneScan3D.UKB.GLMM(
  G = G_gene_buffer,
  G.EnhancerAll = G_EnhancerAll,
  R = length(p_EnhancerAll),
  p_Enhancer = p_EnhancerAll,
  window.size = c(1000, 5000, 10000),
  pos = pos_gene_buffer,
  MAC.threshold = 10,
  MAF.threshold = 0.01,
  Gsub.id = Gsub.id,
  result.null.model.GLMM = result.null.model.GLMM,
  outcome = "C",
  sparseSigma = sparseSigma,
  ratio = ratio
)
}
\arguments{
\item{G}{The genotype matrix in the gene buffer region, which is a n*p matrix where n is the number of individuals and p is the number of genetic variants in the gene buffer region.}

\item{G.EnhancerAll}{The genotype matrix for R enhancers, by combining the genotype matrix of each enhancer by columns.}

\item{R}{Number of enhancers.}

\item{p_Enhancer}{Number of variants in R enhancers, which is a 1*R vector.}

\item{window.size}{The 1-D window sizes in base pairs to scan the gene buffer region. The recommended window sizes are c(1000,5000,10000).}

\item{pos}{The positions of genetic variants in the gene buffer region, an p dimensional vector. Each position corresponds to a column in the genotype matrix G and a row in the functional annotation matrix Z.}

\item{MAC.threshold}{Threshold for minor allele count. Variants below MAC.threshold are ultra-rare variants. The recommended level is 10.}

\item{MAF.threshold}{Threshold for minor allele frequency. Variants below MAF.threshold are rare variants. The recommended level is 0.01.}

\item{Gsub.id}{The subject id corresponding to the genotype matrix, an n dimensional vector. The default is NULL, where the matched phenotype and genotype matrices are assumed.}

\item{result.null.model.GLMM}{The fitted null GLMM results obtained from SAIGE/SAIGE-Gene package.}

\item{outcome}{'C' for quantitative trait, 'D' for binary trait.}

\item{sparseSigma}{n by n sparse Sigma matrix obtained from SAIGE/SAIGE-Gene package.}

\item{ratio}{Variance ratio to calibrate test statistics,obtained from SAIGE/SAIGE-Gene package.}
}
\value{
\item{GeneScan3D.Cauchy.pvalue}{Cauchy combination p-values of all, common and rare variants for GeneScan3D analysis.}

\item{M}{Number of 1D scanning windows.}

\item{minp}{Minimum p-values of all, common and rare variants for 3D windows.}

\item{RE_minp}{The regulartory elements in the 3D windows corresponding to the minimum p-values, for all, common and rare variants. 0 represents promoter and a number from 1 to R represents promoter and r-th enhancer.}
}
\description{
This function perform the gene-based test for each gene using the fitted null GLMM and estimated variance ratio obtained from SAIGE/SAIGE-Gene package. For binary traits, we conduct SPA gene-based tests to deal with imbalance case-control issues.
}
\examples{
data("GeneScan3D.UKB.GLMM.example")
result.null.model.GLMM=GeneScan3D.UKB.GLMM.example$result.null.model.GLMM
ratio=GeneScan3D.UKB.GLMM.example$ratio
sparseSigma=GeneScan3D.UKB.GLMM.example$sparseSigma
G_gene_buffer=GeneScan3D.UKB.GLMM.example$G_gene_buffer
pos_gene_buffer=GeneScan3D.UKB.GLMM.example$pos_gene_buffer
G_gene_buffer_knockoff1=GeneScan3D.UKB.GLMM.example$G_gene_buffer_knockoff1
G_enhancer=GeneScan3D.UKB.GLMM.example$G_enhancer
G_enhancer_knockoff1=GeneScan3D.UKB.GLMM.example$G_enhancer_knockoff1
Gsub.id=result.null.model.GLMM$sampleID

G_EnhancerAll=G_enhancer
p_EnhancerAll=dim(G_enhancer)[2]
G_EnhancerAll_knockoff1=G_enhancer_knockoff1
p_EnhancerAll_knockoff1=dim(G_enhancer_knockoff1)[2]
R=1

result.GeneScan3D_orginal=GeneScan3D.UKB.GLMM(G=G_gene_buffer,
                                             G.EnhancerAll=G_EnhancerAll,
                                             R=R,
                                             p_Enhancer=p_EnhancerAll,
                                             window.size=c(1000,5000,10000),
                                             pos=pos_gene_buffer,
                                             MAC.threshold=10,
                                             MAF.threshold=0.01,
                                             Gsub.id=Gsub.id,
                                             result.null.model.GLMM,
                                             outcome='C',
                                            sparseSigma=sparseSigma,
                                            ratio=ratio)
result.GeneScan3D_orginal$GeneScan3D.Cauchy.pvalue[1]

}
